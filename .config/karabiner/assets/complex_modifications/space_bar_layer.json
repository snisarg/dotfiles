// ┌──────────────────────────────────────────────┐
// │ Key-index (reserved by this rule-set)        │
// ├──────────────────────────────────────────────┤
// │ Layer key  : Space bar (hold)                │
// │ Space tap  : literal space                   │
// │ Nav keys   : e ↑  s ↓  f ←  d →  q Pg↑  e Pg↓│
// │ Mods       : j ⌘  k ⌥  l ⌃  ; ⇧              │
// │ Brackets   : u {  i }  n [  m ]              │
// │ Other      : [ ⌫  o =  p +  . word_delete    │
// └──────────────────────────────────────────────┘

{
  "title": "Space-bar hold = Nav/Mod layer",
  "rules": [
    {
      "description": "Hold Space-bar for layer 1, Space tap otherwise",

      "manipulators": [

        /* ===== Navigation keys (E S D F & QE) ======================= */
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "f", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "right_arrow" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "s", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "left_arrow" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "d", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "down_arrow" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "e", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "up_arrow" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "w", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "page_up" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "r", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "page_down" } ],
          "type": "basic"
        },

        /* ===== Right-hand home-row → modifiers ===================== */
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "j", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "right_command" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "k", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "right_option" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "l", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "right_control" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "semicolon", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "right_shift" } ],
          "type": "basic"
        },

        /* ===== Editing / symbols =================================== */
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "open_bracket", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "delete_or_backspace" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "period", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "delete_or_backspace", "modifiers": ["right_option"] } ],
          "type": "basic"
        },

        /* plus / equals and brackets on right hand */
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "p", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "equal_sign", "modifiers": ["right_shift"] } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "o", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "equal_sign" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "i", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "close_bracket", "modifiers": ["right_shift"] } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "u", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "open_bracket", "modifiers": ["right_shift"] } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "m", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "close_bracket" } ],
          "type": "basic"
        },
        {
          "conditions": [ { "name": "spacebar pressed", "type": "variable_if", "value": 1 } ],
          "from": { "key_code": "n", "modifiers": { "optional": ["any"] } },
          "to":   [ { "key_code": "open_bracket" } ],
          "type": "basic"
        },

        /* ===== Layer toggle (Space bar) ============================ */
        {
          "from": { "key_code": "spacebar", "modifiers": { "optional": ["any"] } },
          "to":   [ { "set_variable": { "name": "spacebar pressed", "value": 1 } } ],
          "to_after_key_up": [ { "set_variable": { "name": "spacebar pressed", "value": 0 } } ],

          /* single tap sends a literal space */
          "to_if_alone":  [ { "key_code": "spacebar" } ],
          "type": "basic"
        }

      ] /* manipulators */
    }
  ]
}

